name: Create GKE + Flux (CLI)

on:
  workflow_dispatch:
    inputs:
      apply:
        description: "Run terraform apply? (false = plan only)"
        required: true
        type: boolean
        default: true
      bootstrap:
        description: "Run Flux CLI bootstrap after apply?"
        required: true
        type: boolean
        default: true

permissions:
  contents: write

concurrency:
  group: create-gke
  cancel-in-progress: true

jobs:
  create:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_environment_variables: true

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: gke-gcloud-auth-plugin

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.5"

      - name: Terraform (create cluster & node pool first)
        if: ${{ inputs.apply }}
        env:
          GITHUB_TOKEN:                 ${{ secrets.GH_TOKEN }}
          TF_VAR_project:               ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_region:                ${{ secrets.GCP_REGION }}
          TF_VAR_zone:                  ${{ secrets.GCP_ZONE }}
          TF_VAR_cluster_name:          gke-flux-std
          TF_VAR_github_owner:          mexxo-dvp
          TF_VAR_github_repo:           gitops
          TF_VAR_github_token:          ${{ secrets.GH_TOKEN }}
          TF_VAR_flux_path:             clusters/gke
        shell: bash
        run: |
          set -euo pipefail
          terraform init -input=false
          terraform apply -input=false -auto-approve \
            -target=google_container_cluster.this \
            -target=google_container_node_pool.default

      - name: Terraform (full apply incl. kubeconfig output)
        if: ${{ inputs.apply }}
        env:
          GITHUB_TOKEN:        ${{ secrets.GH_TOKEN }}
          TF_VAR_project:      ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_region:       ${{ secrets.GCP_REGION }}
          TF_VAR_zone:         ${{ secrets.GCP_ZONE }}
          TF_VAR_cluster_name: gke-flux-std
          TF_VAR_github_owner: mexxo-dvp
          TF_VAR_github_repo:  gitops
          TF_VAR_github_token: ${{ secrets.GH_TOKEN }}
          TF_VAR_flux_path:    clusters/gke
        shell: bash
        run: |
          set -euo pipefail
          terraform apply -input=false -auto-approve

      - name: Terraform plan only (no changes)
        if: ${{ !inputs.apply }}
        env:
          GITHUB_TOKEN:        ${{ secrets.GH_TOKEN }}
          TF_VAR_project:      ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_region:       ${{ secrets.GCP_REGION }}
          TF_VAR_zone:         ${{ secrets.GCP_ZONE }}
          TF_VAR_cluster_name: gke-flux-std
          TF_VAR_github_owner: mexxo-dvp
          TF_VAR_github_repo:  gitops
          TF_VAR_github_token: ${{ secrets.GH_TOKEN }}
          TF_VAR_flux_path:    clusters/gke
        shell: bash
        run: |
          set -euo pipefail
          terraform init -input=false
          terraform plan -no-color -input=false \
            -target=google_container_cluster.this \
            -target=google_container_node_pool.default

      - name: Flux bootstrap (CLI)
        if: ${{ inputs.bootstrap && inputs.apply }}
        env:
          GITHUB_TOKEN:   ${{ secrets.GH_TOKEN }}
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
          GOOGLE_ZONE:    ${{ secrets.GCP_ZONE }}
          CLUSTER_NAME:   gke-flux-std
        shell: bash
        run: |
          set -euo pipefail
          gcloud container clusters get-credentials "$CLUSTER_NAME" --zone "$GOOGLE_ZONE" --project "$GOOGLE_PROJECT"
          curl -s https://fluxcd.io/install.sh | sudo bash
          flux check --pre
          flux bootstrap github \
            --owner=mexxo-dvp \
            --repository=gitops \
            --branch=main \
            --path=clusters/gke \
            --personal \
            --token-auth
          flux reconcile source git flux-system -n flux-system
          flux reconcile kustomization flux-system -n flux-system --with-source
